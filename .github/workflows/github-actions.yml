# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI do projeto FC3 Catalog Admin

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      checks: write

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Start containers
      run: docker-compose -f "FC.Codeflix.Catalog.EndToEndTests/docker-compose.yml" up -d --build

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Report Tests
        path: "**/test-results.trx"                            
        reporter: dotnet-trx
        fail-on-error: true
        
    - name: Generate Code Coverage
      run: dotnet test --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage FC.Codeflix.Catalog.UnitTests/FC.Codeflix.Catalog.UnitTests.csproj

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: success() || failure()
      with:
          filename: coverage/coverage.cobertura.xml
          badge: true
          format: "markdown"
          output: "both"
